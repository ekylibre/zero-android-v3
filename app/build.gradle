apply plugin: 'com.android.application'
apply plugin: 'com.apollographql.android'

android {
    signingConfigs {
        config {
            keyAlias key_alias
            keyPassword store_password
            storeFile file(store_path)
            storePassword store_password
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.ekylibre.android"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 19
        versionName "1.0.3"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        manifestPlaceholders = [
                'appAuthRedirectScheme': 'agrico'
        ]
        resValue 'string', 'mapbox_token', mapbox_token
        signingConfig signingConfigs.config
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "API_URL", eky_api_url
            //debuggable true
        }
        debug {
            buildConfigField "String", "API_URL", eky_debug_api_url
        }
    }
    flavorDimensions "version"
    productFlavors {
        ekylibre {
            dimension "version"
            buildConfigField 'boolean', 'IS_AGRICO', 'false'
            ext {
                client_id = [debug: eky_debug_client_id, release: eky_client_id]
                client_secret = [debug: eky_debug_client_secret, release: eky_client_secret]
            }
            signingConfig signingConfigs.config
        }
        agrico {
            dimension "version"
            applicationIdSuffix ".agriconomie"
            versionNameSuffix "-agrico"
            buildConfigField 'boolean', 'IS_AGRICO', 'true'
            ext {
                client_id = [debug: agrico_debug_client_id, release: agrico_client_id]
                client_secret = [debug: agrico_debug_client_secret, release: agrico_client_secret]
                api_agrico = [debug: agrico_debug_api_url, release: agrico_api_url]
            }
            signingConfig signingConfigs.config
        }
    }
    applicationVariants.all { variant ->
        def flavor = variant.productFlavors[0]
        println "Setting up CLIENT_ID ${flavor.ext.client_id[variant.buildType.name]} for variant [${variant.name}]"
        variant.buildConfigField "String", "CLIENT_ID", "\"${flavor.ext.client_id[variant.buildType.name]}\""
        variant.buildConfigField "String", "CLIENT_SECRET", "\"${flavor.ext.client_secret[variant.buildType.name]}\""
        if (flavor.name == 'agrico') {
            variant.buildConfigField "String", "API_AGRICO", "\"${flavor.ext.api_agrico[variant.buildType.name]}\""
        }
    }
}

apollo {
    customTypeMapping = [
            "Date": "java.util.Date",
            "Polygon": "com.mapbox.geojson.Polygon",
            "Point": "com.mapbox.geojson.Point",
            "ID": "java.lang.String"
    ]
}

dependencies {

    def junit_version = '5.3.1'

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // Support libraries
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.fragment:fragment:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.0.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'
    // Test libraries
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    // Google Services, needed for fixing SSL Handshake error
    implementation 'com.google.android.gms:play-services-base:16.0.1'
    implementation 'com.google.android.material:material:1.0.0'
    api 'com.google.guava:guava:25.1-android'
    // Room database
    implementation 'androidx.room:room-runtime:2.0.0'
    annotationProcessor 'androidx.room:room-compiler:2.0.0'
    // Retrofit & Picasso
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.4.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    // Apollo GraphQL Client
    implementation 'com.apollographql.apollo:apollo-runtime:0.5.0'
    implementation 'com.apollographql.apollo:apollo-android-support:0.5.0'
    // Mapbox
    implementation 'com.mapbox.mapboxsdk:mapbox-android-sdk:6.6.5'
    implementation 'com.mapbox.mapboxsdk:mapbox-sdk-services:4.0.0'
    implementation 'com.mapbox.mapboxsdk:mapbox-sdk-turf:4.0.0'
    implementation 'com.jakewharton:process-phoenix:2.0.0'
    // Flavor specific libraries for Agriconomie.com
    agricoImplementation 'net.openid:appauth:0.7.1'
    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.4'

//    compile 'com.jakewharton.threetenabp:threetenabp:1.1.1'

}
